
#include "cvt_reference_curve.h"

#include <mbsim/numerics/nonlinear_algebra/multi_dimensional_newton_method.h>

using namespace MBSim;


double ig2ThetaViceVersa(double input) {
  return (1 - input) / (1 + input);
}

void computeBeltNumbers(double rP, double theta, double pulleyDistance, double & rS, double & phiMax, double & endSecondary, double & endPushPart, double & endPrimary, double & endLoosePart) {
  rS = rP * ig2ThetaViceVersa(theta);
  phiMax = acos((rP - rS) / pulleyDistance);

// End-Positions of different parts
  endSecondary = rS * phiMax;
  endPushPart = endSecondary + sin(phiMax) * pulleyDistance;
  endPrimary = endPushPart + 2. * rP * (M_PI - phiMax);
  endLoosePart = endPrimary + sin(phiMax) * pulleyDistance;
}

PlanarBeltKinematicFunction::PlanarBeltKinematicFunction(double length, double pulleyDistance, double ig_target) :
    length(length), pulleyDistance(pulleyDistance), ig_target(ig_target) {
}

PlanarBeltKinematicFunction::~PlanarBeltKinematicFunction() {
}

Vec PlanarBeltKinematicFunction::operator ()(const Vec & rP) {
  Vec result(1, NONINIT);

  double rS = ig_target * rP(0);
  double phi = acos((rP(0) - rS) / pulleyDistance);
  double alpha = asin((rS - rP(0)) / pulleyDistance);

  double bP = 2 * rP(0) * (M_PI - phi);
  double bS = 2 * rS * phi;
  double b = pulleyDistance * cos(alpha);

  result(0) = length - (2 * b + bP + bS);
  return result;
}

SimpleRefCurveFunction::SimpleRefCurveFunction(double length, double pulleyDistance, double theta) :
    length(length), pulleyDistance(pulleyDistance), theta(theta) {

  MultiDimensionalNewtonMethod newton;
  PlanarBeltKinematicFunction fct(length, pulleyDistance, ig2ThetaViceVersa(theta));
  NumericalNewtonJacobianFunction numJac;
  GlobalResidualCriteriaFunction criteria(1e-16);
  StandardDampingFunction damping;

  newton.setFunction(&fct);
  newton.setCriteriaFunction(&criteria);
  newton.setJacobianFunction(&numJac);
  newton.setDampingFunction(&damping);

  Vec rPVec(1, INIT, (length - 2 * pulleyDistance) / (2 * M_PI));
  rPVec = newton.solve(rPVec);

  rP = rPVec(0);
  double endPrimary, endLoosePart;
  computeBeltNumbers(rP, theta, pulleyDistance, rS, phiMax, endSecondary, endPushPart, endPrimary, endLoosePart);

  //Transition point: Secondary to push part
  rSecEnd(0) = -rS * cos(phiMax);
  rSecEnd(1) = rS * sin(phiMax);

  //Transition point: Push Part to primary
  rPriStart(0) = pulleyDistance - rP * cos(phiMax);
  rPriStart(1) = rP * sin(phiMax);

}

SimpleRefCurveFunction::~SimpleRefCurveFunction() {
}

double SimpleRefCurveFunction::getPrimaryRadius() {
  return rP;
}

double SimpleRefCurveFunction::getSecondaryRadius() {
  return rS;
}

double SimpleRefCurveFunction::getEndSecondary() {
  return endSecondary;
}

double SimpleRefCurveFunction::getEndPushPart() {
  return endPushPart;
}

Vec2 SimpleRefCurveFunction::operator ()(const double & x) {
  Vec2 point(NONINIT);

  double curPos = x;
  if (x > length / 2.)
    curPos = length - x;

  if (curPos < endSecondary) {
    //in secondary arc at the beginning
    double phi = curPos / rS;
    point(0) = -rS * cos(phi);
    point(1) = rS * sin(phi);
  }
  else if (curPos < endPushPart) {
    //in push part
    Vec2 t = rPriStart - rSecEnd;
    t = t / nrm2(t);
    double d = curPos - endSecondary;
    point(0) = rSecEnd(0) + d * t(0);
    point(1) = rSecEnd(1) + d * t(1);
  }
  else {
    //in Primary
    double d = curPos - endPushPart;
    double phi = phiMax + d / rP;
    point(0) = pulleyDistance - rP * cos(phi);
    point(1) = rP * sin(phi);
  }

  //change sign of y-coodinate
  if (x > length / 2.)
    point(1) = -point(1);

  return point;
}

Vec2 SimpleRefCurveFunction::parDer(const double & x) {
  Vec2 dpoint(NONINIT);

  double curPos = x;
  if (x > length / 2.)
    curPos = length - x;

  if (curPos < endSecondary) {
    //in secondary arc at the beginning
    double phi = curPos / rS;
    double dphi = 1 / rS;
    dpoint(0) = rS * sin(phi) * dphi;
    dpoint(1) = rS * cos(phi) * dphi;
  }
  else if (curPos < endPushPart) {
    //in push part
    Vec2 t = rPriStart - rSecEnd;
    t = t / nrm2(t);
    dpoint(0) = t(0);
    dpoint(1) = t(1);
  }
  else {
    //in Primary
    double d = curPos - endPushPart;
    double phi = phiMax + d / rP;
    double dphi = 1 / rP;
    dpoint(0) = rP * sin(phi) * dphi;
    dpoint(1) = rP * cos(phi) * dphi;
  }

  //change sign of y-coodinate
  if (x > length / 2.)
    dpoint(1) = -dpoint(1);

  return dpoint;
}



CVTReferenceSurface::CVTReferenceSurface() :
    length(0), pulleyDistance(0), thetaLower(-0.499), thetaUpper(0.499), halfGridSize(20), saddleCenter(0.) {

}

CVTReferenceSurface::~CVTReferenceSurface() {

}

void CVTReferenceSurface::setConstraints(double length_, double pulleyDistance_, double saddleCenter_, double thetaLower_, double thetaUpper_, int halfGridSize_) {
  length = length_;
  pulleyDistance = pulleyDistance_;
  saddleCenter = saddleCenter_;
  thetaLower = thetaLower_;
  thetaUpper = thetaUpper_;
  halfGridSize = halfGridSize_;
}

//void CVTReferenceSurface::provideParameters(const ElementParameters elePars_, const RingSetParameters ringPars_, PulleySetParameters * pulleyPars_, const ElementPulleyContactParameters elpuPars_) {
//  elePars = elePars_;
//  ringPars = ringPars_;
//  pulleyPars = pulleyPars_;
//  elpuPars = elpuPars_;
//}

//void CVTReferenceSurface::computeMisalignmentFunctions() {
//
//  /* Structure is as follows:
//   * - find the points to interpolate
//   *   - for some number of thetas
//   *   - for each theta for a number of positions along the curve
//   * - find the u and v Vecs (using surfMeshPars)
//   * - Interpolate with the NURBS library
//   * (- optimize these points that the length is one)
//   */
//
//  int degTheta = 3;
//  int nTheta = 10;
//
//  MatVx3 Nodelist(nTheta);
//
//// Loop over all possible Theta points
//  for (int i = 0; i < nTheta; i++) {
//    double theta = thetaLower + i * (thetaUpper - thetaLower) / (nTheta - 1);
//
//    double rP = computerP(theta);
//    double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
//    computeBeltNumbers(rP, theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);
//
//    SimpleSheavePositionFunction refCurve(elePars, ringPars, pulleyPars, elpuPars);
//    Vec2 pos = refCurve.computeCenterPositions(rP, rS);
//
//    Nodelist(i, 0) = pos(0);
//    Nodelist(i, 1) = pos(1);
//  }
//
//// Interpolation
//  centerPositions.globalInterp(Nodelist, thetaLower, thetaUpper, degTheta);
//
//  if (0) {
//    // Test the function of the primary radius
//    string thetaStr, mAPRI, dmAPRI1, mASEC, dmASEC1;
//    thetaStr = "theta = [";
//    mAPRI = "mAPRI = [";
//    dmAPRI1 = "mAPRId1 = [";
//    mASEC = "mASEC = [";
//    dmASEC1 = "mASECd1 = [";
//    MatVx4 ders;
//    int num = nTheta * 2;
//    for (int i = 0; i < num; i++) {
//      double theta = thetaLower + i * (thetaUpper - thetaLower) / (num - 1);
//      thetaStr += toString(theta) + ",";
//      centerPositions.deriveAtH(theta, 2, ders);
//      mAPRI += toString(ders(0, 0)) + ",";
//      dmAPRI1 += toString(ders(1, 0)) + ",";
//      mASEC += toString(ders(0, 1)) + ",";
//      dmASEC1 += toString(ders(1, 1)) + ",";
//    }
//    cout << thetaStr << "];" << endl;
//    cout << mAPRI << "];" << endl;
//    cout << dmAPRI1 << "];" << endl;
//    cout << mASEC << "];" << endl;
//    cout << dmASEC1 << "];" << endl;
//    exit(0);
//  }
//
//  if (0) {
//    // test the function derivatives w.r.t xi
//    int numXi = 50;
//    int numTheta = 20;
//    for (int iTh = 0; iTh < numTheta; iTh++) {
//      double theta = thetaLower + iTh * (thetaUpper - thetaLower) / (numTheta - 1);
//      string posStr("rP{" + toString(iTh + 1) + "} = [");
//      string dposdXiStr("dposdXi{" + toString(iTh + 1) + "} = [");
//      string d2posdXi2Str("d2posdXi2{" + toString(iTh + 1) + "} = [");
//      for (int iXi = 0; iXi < numXi; iXi++) {
//        double xi = iXi * length / (numXi - 1);
//        Vec3 pos = computeVecAt(xi, theta, 0, 0);
//        Vec3 dposdXi = computeVecAt(xi, theta, 1, 0);
//        Vec3 d2posdXi2 = computeVecAt(xi, theta, 2, 0);
//        posStr += toString(pos(0)) + "," + toString(pos(1)) + ";";
//        dposdXiStr += toString(dposdXi(0)) + "," + toString(dposdXi(1)) + ";";
//        d2posdXi2Str += toString(d2posdXi2(0)) + "," + toString(d2posdXi2(1)) + ";";
//      }
//      posStr += "];";
//      dposdXiStr += "];";
//      d2posdXi2Str += "];";
//      cout << posStr << endl << dposdXiStr << endl << d2posdXi2Str << endl;
//    }
//    exit(0);
//  }
//
//  if (0) {
//    // test the function derivatives w.r.t theta
//    int numXi = 20;
//    int numTheta = 100;
//    for (int iXi = 0; iXi < numXi; iXi++) {
//      double xi = iXi * length / (numXi - 1);
//      string posStr("rP{" + toString(iXi + 1) + "} = [");
//      string dposdThStr("dposdTh{" + toString(iXi + 1) + "} = [");
//      string d2posdTh2Str("d2posdTh2{" + toString(iXi + 1) + "} = [");
//      for (int iTh = 0; iTh < numTheta; iTh++) {
//        double theta = thetaLower + iTh * (thetaUpper - thetaLower) / (numTheta - 1);
//        Vec3 pos = computeVecAt(xi, theta, 0, 0);
//        Vec3 dposdTh = computeVecAt(xi, theta, 0, 1);
//        Vec3 d2posdTh2 = computeVecAt(xi, theta, 0, 2);
//        posStr += toString(pos(0)) + "," + toString(pos(1)) + ";";
//        dposdThStr += toString(dposdTh(0)) + "," + toString(dposdTh(1)) + ";";
//        d2posdTh2Str += toString(d2posdTh2(0)) + "," + toString(d2posdTh2(1)) + ";";
//      }
//      posStr += "];";
//      dposdThStr += "];";
//      d2posdTh2Str += "];";
//      cout << posStr << endl << dposdThStr << endl << d2posdTh2Str << endl;
//    }
//    exit(0);
//  }
//
//}

//double CVTReferenceSurface::computeMisaligment(double xi, double Theta) {
//  double mA = 0;
//  double rP = computerP(Theta);
//  double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
//  computeBeltNumbers(rP, Theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);
//
//  double tl = endPushPart - endSecondary; // trum length
////    double bI = 2. * rP * (M_PI - phi); // input arc length of neutral fibre
//
//  if (xi < endSecondary or xi > endLoosePart) { //position in secondary arc
//  // local z-direction as mean value between output fixed and loose output sheave and correction
//    mA = centerPositions.pointAt(Theta)(1) + saddleCenter;
//  }
//  else if (xi < endPushPart) { // position in upper trum
//    // local z-direction as mean value between output fixed and loose output sheave and correction
//    mA = centerPositions.pointAt(Theta)(1) + (centerPositions.pointAt(Theta)(0) - centerPositions.pointAt(Theta)(1)) * ((xi - endSecondary) / tl) + saddleCenter;
//  }
//  else if (xi < endPrimary) { // position in primary arc
//    // local z-direction as mean value between input fixed and loose output sheave and correction
//    mA = centerPositions.pointAt(Theta)(0) + saddleCenter;
//  }
//  else if (xi <= endLoosePart) { // position in lower trum
//    // local z-direction as mean value between input fixed and loose output sheave and correction
//    mA = centerPositions.pointAt(Theta)(0) + (centerPositions.pointAt(Theta)(1) - centerPositions.pointAt(Theta)(0)) * ((xi - endPrimary) / tl) + saddleCenter;
//  }
//  else {
//    cout << "xi = " << xi << endl;
//    cout << "endSecondary = " << endSecondary << endl;
//    cout << "endPushPart = " << endPushPart << endl;
//    cout << "endPrimary = " << endPrimary << endl;
//    cout << "endLoosePart = " << endLoosePart << endl;
//    cout << "-------------------" << endl;
//    cout << "Theta = " << Theta << endl;
//    cout << "rP = " << rP << endl;
//    cout << "rS = " << rS << endl;
//    cout << "phi = " << phi << endl;
//
//    throw MBSimError("xi is not in a valid range!");
//  }
//
//  return mA;
//}

CVTReferenceSurfaceParts::CVTReferenceSurfaceParts() :
    CVTReferenceSurface() {

}

CVTReferenceSurfaceParts::~CVTReferenceSurfaceParts() {
}

void CVTReferenceSurfaceParts::computeReference() {

  /* Structure is as follows:
   * - find the points to interpolate
   *   - for some number of thetas
   *   - for each theta for a number of positions along the curve
   * - find the u and v Vecs (using surfMeshPars)
   * - Interpolate with the NURBS library
   * (- optimize these points that the length is one)
   */

  int degTheta = 3;
  int nTheta = 51;

  MatVx3 Nodelist(nTheta);

// Loop over all possible Theta points
  for (int i = 0; i < nTheta; i++) {
    double theta = thetaLower + i * (thetaUpper - thetaLower) / (nTheta - 1);

    SimpleRefCurveFunction refCurve(length, pulleyDistance, theta);

    Nodelist(i, 0) = refCurve.getPrimaryRadius();

  }

// Interpolation
  primaryRadius.globalInterp(Nodelist, thetaLower, thetaUpper, degTheta);

  if (0) {
    // Test the function of the primary radius
    string thetaStr, rP, rPD1, rPD2, rPD3;
    thetaStr = "theta = [";
    rP = "rP = [";
    rPD1 = "rPD1 = [";
    rPD2 = "rPD2 = [";
    rPD3 = "rPD3 = [";
    MatVx4 ders;
    int num = nTheta * 2;
    for (int i = 0; i < num; i++) {
      double theta = thetaLower + i * (thetaUpper - thetaLower) / (num - 1);
      thetaStr += toString(theta) + ",";
      primaryRadius.deriveAtH(theta, 4, ders);
      rP += toString(ders(0, 0)) + ",";
      rPD1 += toString(ders(1, 0)) + ",";
      rPD2 += toString(ders(2, 0)) + ",";
      rPD3 += toString(ders(3, 0)) + ",";
    }
    cout << thetaStr << "];" << endl;
    cout << rP << "];" << endl;
    cout << rPD1 << "];" << endl;
    cout << rPD2 << "];" << endl;
    cout << rPD3 << "];" << endl;
  }

  if (0) {
    // test the function derivatives w.r.t xi
    int numXi = 50;
    int numTheta = 20;
    for (int iTh = 0; iTh < numTheta; iTh++) {
      double theta = thetaLower + iTh * (thetaUpper - thetaLower) / (numTheta - 1);
      string posStr("rP{" + toString(iTh + 1) + "} = [");
      string dposdXiStr("dposdXi{" + toString(iTh + 1) + "} = [");
      string d2posdXi2Str("d2posdXi2{" + toString(iTh + 1) + "} = [");
      for (int iXi = 0; iXi < numXi; iXi++) {
        double xi = iXi * length / (numXi - 1);
        Vec3 pos = computeVecAt(xi, theta, 0, 0);
        Vec3 dposdXi = computeVecAt(xi, theta, 1, 0);
        Vec3 d2posdXi2 = computeVecAt(xi, theta, 2, 0);
        posStr += toString(pos(0)) + "," + toString(pos(1)) + ";";
        dposdXiStr += toString(dposdXi(0)) + "," + toString(dposdXi(1)) + ";";
        d2posdXi2Str += toString(d2posdXi2(0)) + "," + toString(d2posdXi2(1)) + ";";
      }
      posStr += "];";
      dposdXiStr += "];";
      d2posdXi2Str += "];";
      cout << posStr << endl << dposdXiStr << endl << d2posdXi2Str << endl;
    }
    THROW_MBSIMERROR("computeReference failed");
  }

  if (0) {
    // test the function derivatives w.r.t theta
    int numXi = 20;
    int numTheta = 100;
    for (int iXi = 0; iXi < numXi; iXi++) {
      double xi = iXi * length / (numXi - 1);
      string posStr("rP{" + toString(iXi + 1) + "} = [");
      string dposdThStr("dposdTh{" + toString(iXi + 1) + "} = [");
      string d2posdTh2Str("d2posdTh2{" + toString(iXi + 1) + "} = [");
      for (int iTh = 0; iTh < numTheta; iTh++) {
        double theta = thetaLower + iTh * (thetaUpper - thetaLower) / (numTheta - 1);
        Vec3 pos = computeVecAt(xi, theta, 0, 0);
        Vec3 dposdTh = computeVecAt(xi, theta, 0, 1);
        Vec3 d2posdTh2 = computeVecAt(xi, theta, 0, 2);
        posStr += toString(pos(0)) + "," + toString(pos(1)) + ";";
        dposdThStr += toString(dposdTh(0)) + "," + toString(dposdTh(1)) + ";";
        d2posdTh2Str += toString(d2posdTh2(0)) + "," + toString(d2posdTh2(1)) + ";";
      }
      posStr += "];";
      dposdThStr += "];";
      d2posdTh2Str += "];";
      cout << posStr << endl << dposdThStr << endl << d2posdTh2Str << endl;
    }
    THROW_MBSIMERROR("computeReference failed");
  }

}

Vec3 CVTReferenceSurfaceParts::computeVecAt(double xi, double Theta, int derXi, int derTheta) {

  while (xi > length) {
    xi -= length;
  }
  while (xi < 0) {
    xi += length;
  }

// Use symmetry
  int mirrorXCoord = 1.;
  int mirrorYCoord = 1.;
  if (xi > length / 2.) {
    xi = length - xi;
    if (derXi % 2 == 0) {
      mirrorYCoord = -1;
    }
    else {
      mirrorXCoord = -1;
    }
  }

  Vec3 retVec;

  if (derXi == 0) {
    if (derTheta == 0) {
      computeVecAt00(retVec, xi, Theta);
    }
    else if (derTheta == 1) {
      computeVecAt01(retVec, xi, Theta);
    }
    else if (derTheta == 2) {
      computeVecAt02(retVec, xi, Theta);
    }
    else {
      throw MBSimError("Not implemented");
    }
  }
  else if (derXi == 1) {
    if (derTheta == 0) {
      computeVecAt10(retVec, xi, Theta);
    }
    else if (derTheta == 1) {
      computeVecAt11(retVec, xi, Theta);
    }
    else if (derTheta == 2) {
      computeVecAt12(retVec, xi, Theta);
    }
    else {
      throw MBSimError("Not implemented");
    }
  }
  else if (derXi == 2) {
    if (derTheta == 0) {
      computeVecAt20(retVec, xi, Theta);
    }
    else if (derTheta == 1) {
      computeVecAt21(retVec, xi, Theta);
    }
    else if (derTheta == 2) {
      computeVecAt22(retVec, xi, Theta);
    }
    else {
      throw MBSimError("Not implemented");
    }
  }
  else if (derXi == 3) {
    if (derTheta == 0) {
      computeVecAt30(retVec, xi, Theta);
    }
    else if (derTheta == 1) {
      computeVecAt31(retVec, xi, Theta);
    }
    else if (derTheta == 2) {
      computeVecAt32(retVec, xi, Theta);
    }
    else {
      throw MBSimError("Not implemented");
    }
  }
  else if (derXi == 4) {
    if (derTheta == 0) {
      computeVecAt40(retVec, xi, Theta);
    }
    else if (derTheta == 1) {
      computeVecAt41(retVec, xi, Theta);
    }
    else if (derTheta == 2) {
      computeVecAt42(retVec, xi, Theta);
    }
    else {
      throw MBSimError("Not implemented");
    }
  }
  else {
    throw MBSimError("Not implemented");
  }

  retVec(0) *= mirrorXCoord;
  retVec(1) *= mirrorYCoord;

  return retVec;
}

double CVTReferenceSurfaceParts::computerP(double theta) {
  return primaryRadius.pointAt(theta)(0);
}

fmatvec::VecV CVTReferenceSurfaceParts::computeC1Positions(const fmatvec::Vec & qRef) {
  double theta = qRef(1);
  double rP = computerP(theta);
  double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
  computeBeltNumbers(rP, theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);

  VecV C1Pos(4);
  C1Pos(0) = endSecondary;
  C1Pos(1) = endPushPart;
  C1Pos(2) = endPrimary;
  C1Pos(3) = endLoosePart;

  return C1Pos;
  }

void CVTReferenceSurfaceParts::computeVecAt00(Vec3 & retVec, double xi, double Theta) {
  double rP = primaryRadius.pointAt(Theta)(0);
  double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
  computeBeltNumbers(rP, Theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);

  if (xi < endSecondary) { // Secondary
    retVec(0) = (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * (Theta - 1.0)) / (Theta + 1.0);
    retVec(1) = (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * (Theta - 1.0)) / (Theta + 1.0);
  }
  else if (xi < endPushPart) { // Push-Part
    retVec(0) = -(xi + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * (-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0));
    retVec(1) = (xi + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) - (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0);
  }
  else { // Primary
    retVec(0) = pulleyDistance - cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * rP;
    retVec(1) = sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * rP;
  }
}

void CVTReferenceSurfaceParts::computeVecAt01(Vec3 & retVec, double xi, double Theta) {
  double rP = primaryRadius.pointAt(Theta)(0);
  double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
  computeBeltNumbers(rP, Theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);
  MatVx4 ders;
  primaryRadius.deriveAtH(Theta, 1, ders);

  if (xi < endSecondary) { // Secondary
    retVec(0) = (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP) / (Theta + 1.0) + (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * (Theta - 1.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0))) / (Theta + 1.0);
    retVec(1) = (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP) / (Theta + 1.0) + (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * (Theta - 1.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0))) / (Theta + 1.0);
  }
  else if (xi < endPushPart) { // Push-Part
    retVec(0) = -1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * (-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) - (xi + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) + (xi + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 3.0 / 2.0) * ((-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) * 2.0 + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) * 2.0) * (-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * (1.0 / 2.0) + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance;
    retVec(1) = -(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (xi + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) + 1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) - (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) + rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - (xi + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 3.0 / 2.0) * (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * ((-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) * 2.0 + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) * 2.0) * (1.0 / 2.0) + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0);
  }
  else { // Primary
    retVec(0) = -cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * ders(1, 0) - sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * rP * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)));
    retVec(1) = sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * ders(1, 0) - cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * rP * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)));
  }
}

void CVTReferenceSurfaceParts::computeVecAt02(Vec3 & retVec, double xi, double Theta) {
  double rP = primaryRadius.pointAt(Theta)(0);
  double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
  computeBeltNumbers(rP, Theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);
  MatVx4 ders;
  primaryRadius.deriveAtH(Theta, 2, ders);

  if (xi < endSecondary) { // Secondary
    retVec(0) = cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * 1.0 / pow(Theta + 1.0, 2.0) * -2.0 + (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * ders(1, 0) * 2.0) / (Theta + 1.0) + (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 2.0) / (Theta + 1.0) + cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * (Theta - 1.0) * ((xi * 1.0 / pow(Theta - 1.0, 2.0) * 2.0) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 2.0) / (Theta - 1.0) - (xi * 1.0 / pow(Theta - 1.0, 3.0) * (Theta + 1.0) * 2.0) / rP - (xi * 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (Theta + 1.0) * 2.0) / (Theta - 1.0) + (xi * 1.0 / pow(rP, 2.0) * (Theta + 1.0) * ders(2, 0)) / (Theta - 1.0) - xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0) * 2.0)) / (Theta + 1.0) + (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * ders(1, 0) * (Theta - 1.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 2.0) / (Theta + 1.0) - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 2.0 - (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * (Theta - 1.0) * pow(-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0), 2.0)) / (Theta + 1.0);
    retVec(1) = sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * 1.0 / pow(Theta + 1.0, 2.0) * -2.0 + (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * ders(1, 0) * 2.0) / (Theta + 1.0) + (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) - (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 2.0) / (Theta + 1.0) - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 - (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * (Theta - 1.0) * ((xi * 1.0 / pow(Theta - 1.0, 2.0) * 2.0) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 2.0) / (Theta - 1.0) - (xi * 1.0 / pow(Theta - 1.0, 3.0) * (Theta + 1.0) * 2.0) / rP - (xi * 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (Theta + 1.0) * 2.0) / (Theta - 1.0) + (xi * 1.0 / pow(rP, 2.0) * (Theta + 1.0) * ders(2, 0)) / (Theta - 1.0) - xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0) * 2.0)) / (Theta + 1.0) - (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * ders(1, 0) * (Theta - 1.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 2.0) / (Theta + 1.0) + cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 2.0 - (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * rP * (Theta - 1.0) * pow(-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0), 2.0)) / (Theta + 1.0);
  }
  else if (xi < endPushPart) { // Push-Part
    retVec(0) = -(xi + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * ((rP * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(2, 0)) / pulleyDistance + (ders(1, 0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance + (rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0) / pulleyDistance + (ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance - ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0) / pulleyDistance + (rP * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * ders(2, 0)) / (pulleyDistance * (Theta + 1.0))) + 1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * (-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * -2.0) / (Theta + 1.0) + acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 - (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) + (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance + (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0)) - 1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) * 2.0 - (xi + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 5.0 / 2.0) * pow((-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) * 2.0 + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) * 2.0, 2.0) * (-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * (3.0 / 4.0) + 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 3.0 / 2.0) * ((-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) * 2.0 + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) * 2.0) * (-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) + (rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + (xi + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 3.0 / 2.0) * ((-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) * 2.0 + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) * 2.0) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) + (xi + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 3.0 / 2.0) * (-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * (pow(sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0), 2.0) * 2.0 + (-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(2, 0)) / pulleyDistance + (ders(1, 0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance + (rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0) / pulleyDistance + (ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance - ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0) / pulleyDistance + (rP * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * ders(2, 0)) / (pulleyDistance * (Theta + 1.0))) * 2.0 + pow((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance, 2.0) * 2.0 - (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (-sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(2, 0) - (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * 2.0) / (Theta + 1.0) + rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) - (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) + 1.0 / (pulleyDistance * pulleyDistance) * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0)) + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance) * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (Theta + 1.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0 + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (Theta + 1.0)) * 2.0) * (1.0 / 2.0) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0) / pulleyDistance + (ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance - ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0) / pulleyDistance + (rP * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * ders(2, 0)) / (pulleyDistance * (Theta + 1.0));
    retVec(1) = 1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) * 2.0 - (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * 2.0) / (Theta + 1.0) - (xi + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * (-sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(2, 0) - (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * 2.0) / (Theta + 1.0) + rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) - (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) + 1.0 / (pulleyDistance * pulleyDistance) * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0)) + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance) * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (Theta + 1.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0 + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (Theta + 1.0)) - 1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * -2.0) / (Theta + 1.0) + acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 - (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) + (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance + (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0)) + rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + (xi + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 5.0 / 2.0) * (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * pow((-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) * 2.0 + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) * 2.0, 2.0) * (3.0 / 4.0) - (xi + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 3.0 / 2.0) * ((-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) * 2.0 + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) * 2.0) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) - 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 3.0 / 2.0) * (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * ((-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) * 2.0 + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) * 2.0) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) - (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) - (xi + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 3.0 / 2.0) * (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (pow(sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0), 2.0) * 2.0 + (-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(2, 0)) / pulleyDistance + (ders(1, 0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance + (rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0) / pulleyDistance + (ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance - ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0) / pulleyDistance + (rP * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * ders(2, 0)) / (pulleyDistance * (Theta + 1.0))) * 2.0 + pow((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance, 2.0) * 2.0 - (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (-sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(2, 0) - (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * 2.0) / (Theta + 1.0) + rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) - (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) + 1.0 / (pulleyDistance * pulleyDistance) * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0)) + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance) * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (Theta + 1.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0 + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (Theta + 1.0)) * 2.0) * (1.0 / 2.0) + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance) * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (Theta + 1.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0 + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (Theta + 1.0);
  }
  else { // Primary
    retVec(0) = -cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * ders(2, 0) + cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * rP * pow(-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)), 2.0) - sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * rP * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * 2.0) / (Theta + 1.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) + acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) - (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0)) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 2.0 + 1.0 / pow(rP, 2.0) * ders(2, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) + 1.0 / pow(rP, 2.0) * ders(1, 0) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) - sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * ders(1, 0) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0))) * 2.0;
    retVec(1) = sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * ders(2, 0) - sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * rP * pow(-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)), 2.0) - cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * rP * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * 2.0) / (Theta + 1.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) + acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) - (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0)) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 2.0 + 1.0 / pow(rP, 2.0) * ders(2, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) + 1.0 / pow(rP, 2.0) * ders(1, 0) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) - cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * ders(1, 0) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0))) * 2.0;
  }
}

void CVTReferenceSurfaceParts::computeVecAt10(Vec3 & retVec, double xi, double Theta) {
  double rP = primaryRadius.pointAt(Theta)(0);
  double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
  computeBeltNumbers(rP, Theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);

  if (xi < endSecondary) { // Secondary
    retVec(0) = -sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0)));
    retVec(1) = cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0)));
  }
  else if (xi < endPushPart) { // Push-Part
    retVec(0) = -1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * (-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)));
    retVec(1) = 1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0));
  }
  else { // Primary
    retVec(0) = sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP);
    retVec(1) = cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP);
  }
}

void CVTReferenceSurfaceParts::computeVecAt11(Vec3 & retVec, double xi, double Theta) {
  double rP = primaryRadius.pointAt(Theta)(0);
  double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
  computeBeltNumbers(rP, Theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);
  MatVx4 ders;
  primaryRadius.deriveAtH(Theta, 1, ders);

  if (xi < endSecondary) { // Secondary
    retVec(0) = cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0));
    retVec(1) = sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0));
  }
  else if (xi < endPushPart) { // Push-Part
    retVec(0) = -1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) + 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 3.0 / 2.0) * ((-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) * 2.0 + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) * 2.0) * (-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * (1.0 / 2.0);
    retVec(1) = 1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) - 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 3.0 / 2.0) * (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * ((-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) * 2.0 + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) * 2.0) * (1.0 / 2.0);
  }
  else { // Primary
    retVec(0) = -cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)));
    retVec(1) = sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)));
  }
}

void CVTReferenceSurfaceParts::computeVecAt12(Vec3 & retVec, double xi, double Theta) {
  double rP = primaryRadius.pointAt(Theta)(0);
  double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
  computeBeltNumbers(rP, Theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);
  MatVx4 ders;
  primaryRadius.deriveAtH(Theta, 2, ders);

  if (xi < endSecondary) { // Secondary
    retVec(0) = sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * pow(-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0), 2.0) + cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * ((xi * 1.0 / pow(Theta - 1.0, 2.0) * 2.0) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 2.0) / (Theta - 1.0) - (xi * 1.0 / pow(Theta - 1.0, 3.0) * (Theta + 1.0) * 2.0) / rP - (xi * 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (Theta + 1.0) * 2.0) / (Theta - 1.0) + (xi * 1.0 / pow(rP, 2.0) * (Theta + 1.0) * ders(2, 0)) / (Theta - 1.0) - xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0) * 2.0);
    retVec(1) = -cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * pow(-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0), 2.0) + sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * ((xi * 1.0 / pow(Theta - 1.0, 2.0) * 2.0) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 2.0) / (Theta - 1.0) - (xi * 1.0 / pow(Theta - 1.0, 3.0) * (Theta + 1.0) * 2.0) / rP - (xi * 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (Theta + 1.0) * 2.0) / (Theta - 1.0) + (xi * 1.0 / pow(rP, 2.0) * (Theta + 1.0) * ders(2, 0)) / (Theta - 1.0) - xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0) * 2.0);
  }
  else if (xi < endPushPart) { // Push-Part
    retVec(0) = -1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * ((rP * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(2, 0)) / pulleyDistance + (ders(1, 0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance + (rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0) / pulleyDistance + (ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance - ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0) / pulleyDistance + (rP * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * ders(2, 0)) / (pulleyDistance * (Theta + 1.0))) + 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 3.0 / 2.0) * ((-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) * 2.0 + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) * 2.0) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) + 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 3.0 / 2.0) * (-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * (pow(sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0), 2.0) * 2.0 + (-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(2, 0)) / pulleyDistance + (ders(1, 0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance + (rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0) / pulleyDistance + (ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance - ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0) / pulleyDistance + (rP * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * ders(2, 0)) / (pulleyDistance * (Theta + 1.0))) * 2.0 + pow((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance, 2.0) * 2.0 - (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (-sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(2, 0) - (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * 2.0) / (Theta + 1.0) + rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) - (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) + 1.0 / (pulleyDistance * pulleyDistance) * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0)) + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance) * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (Theta + 1.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0 + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (Theta + 1.0)) * 2.0) * (1.0 / 2.0) - 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 5.0 / 2.0) * pow((-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) * 2.0 + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) * 2.0, 2.0) * (-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * (3.0 / 4.0);
    retVec(1) = -1.0 / sqrt(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0)) * (-sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(2, 0) - (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * 2.0) / (Theta + 1.0) + rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) - (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) + 1.0 / (pulleyDistance * pulleyDistance) * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0)) + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance) * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (Theta + 1.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0 + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (Theta + 1.0)) - 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 3.0 / 2.0) * ((-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) * 2.0 + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) * 2.0) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) - 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 3.0 / 2.0) * (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (pow(sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0), 2.0) * 2.0 + (-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(2, 0)) / pulleyDistance + (ders(1, 0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance + (rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0) / pulleyDistance + (ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance - ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0) / pulleyDistance + (rP * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * ders(2, 0)) / (pulleyDistance * (Theta + 1.0))) * 2.0 + pow((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance, 2.0) * 2.0 - (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (-sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(2, 0) - (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * 2.0) / (Theta + 1.0) + rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) - (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) + 1.0 / (pulleyDistance * pulleyDistance) * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0)) + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0) + (1.0 / (pulleyDistance * pulleyDistance) * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (Theta + 1.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0 + (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (Theta + 1.0)) * 2.0) * (1.0 / 2.0) + 1.0 / pow(pow(rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0), 2.0) + pow(-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)), 2.0), 5.0 / 2.0) * (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * pow((-pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0))) * ((rP * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0)) / pulleyDistance + (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) + (rP * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0)) + ((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ders(1, 0) * (Theta - 1.0)) / (pulleyDistance * (Theta + 1.0)) - (rP * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) / pulleyDistance) * 2.0 + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0)) / (Theta + 1.0)) * (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) + (rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0)) / (Theta + 1.0) + (sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) - 1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) - (1.0 / (pulleyDistance * pulleyDistance) * rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (Theta + 1.0)) * 2.0, 2.0) * (3.0 / 4.0);
  }
  else { // Primary
    retVec(0) = -sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * pow(-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)), 2.0) - cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * 2.0) / (Theta + 1.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) + acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) - (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0)) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 2.0 + 1.0 / pow(rP, 2.0) * ders(2, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) + 1.0 / pow(rP, 2.0) * ders(1, 0) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0));
    retVec(1) = -cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * pow(-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)), 2.0) + sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * 2.0) / (Theta + 1.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) + acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) - (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0)) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 2.0 + 1.0 / pow(rP, 2.0) * ders(2, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) + 1.0 / pow(rP, 2.0) * ders(1, 0) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0));
  }
}

void CVTReferenceSurfaceParts::computeVecAt20(Vec3 & retVec, double xi, double Theta) {
  double rP = primaryRadius.pointAt(Theta)(0);
  double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
  computeBeltNumbers(rP, Theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);

  if (xi < endSecondary) { // Secondary
    retVec(0) = -(cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * (Theta + 1.0)) / (rP * (Theta - 1.0));
    retVec(1) = -(sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * (Theta + 1.0)) / (rP * (Theta - 1.0));
  }
  else if (xi < endPushPart) { // Push-Part
    retVec(0) = 0.0;
    retVec(1) = 0.0;
  }
  else { // Primary
    retVec(0) = cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) / rP;
    retVec(1) = -sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) / rP;
  }
}

void CVTReferenceSurfaceParts::computeVecAt21(Vec3 & retVec, double xi, double Theta) {
  double rP = primaryRadius.pointAt(Theta)(0);
  double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
  computeBeltNumbers(rP, Theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);
  MatVx4 ders;
  primaryRadius.deriveAtH(Theta, 1, ders);

  if (xi < endSecondary) { // Secondary
    retVec(0) = -cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) / (rP * (Theta - 1.0)) + (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0) - (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * (Theta + 1.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0))) / (rP * (Theta - 1.0));
    retVec(1) = -sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) / (rP * (Theta - 1.0)) + (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0) + (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * (Theta + 1.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0))) / (rP * (Theta - 1.0));
  }
  else if (xi < endPushPart) { // Push-Part
    retVec(0) = 0.0;
    retVec(1) = 0.0;
  }
  else { // Primary
    retVec(0) = (sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)))) / rP - cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 2.0) * ders(1, 0);
    retVec(1) = (cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)))) / rP + sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 2.0) * ders(1, 0);
  }
}

void CVTReferenceSurfaceParts::computeVecAt22(Vec3 & retVec, double xi, double Theta) {
  double rP = primaryRadius.pointAt(Theta)(0);
  double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
  computeBeltNumbers(rP, Theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);
  MatVx4 ders;
  primaryRadius.deriveAtH(Theta, 2, ders);

  if (xi < endSecondary) { // Secondary
    retVec(0) = (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(Theta - 1.0, 2.0) * 2.0) / rP + (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * ders(1, 0) * 2.0) / (Theta - 1.0) - (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 2.0) / (rP * (Theta - 1.0)) - (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(Theta - 1.0, 3.0) * (Theta + 1.0) * 2.0) / rP + (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * (Theta + 1.0) * pow(-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0), 2.0)) / (rP * (Theta - 1.0)) - (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (Theta + 1.0) * 2.0) / (Theta - 1.0) + (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * (Theta + 1.0) * ders(2, 0)) / (Theta - 1.0) - (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * (Theta + 1.0) * ((xi * 1.0 / pow(Theta - 1.0, 2.0) * 2.0) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 2.0) / (Theta - 1.0) - (xi * 1.0 / pow(Theta - 1.0, 3.0) * (Theta + 1.0) * 2.0) / rP - (xi * 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (Theta + 1.0) * 2.0) / (Theta - 1.0) + (xi * 1.0 / pow(rP, 2.0) * (Theta + 1.0) * ders(2, 0)) / (Theta - 1.0) - xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0) * 2.0)) / (rP * (Theta - 1.0)) - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0) * 2.0 + (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 2.0) / rP + (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 2.0) / (Theta - 1.0);
    retVec(1) = (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(Theta - 1.0, 2.0) * 2.0) / rP + (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 2.0) / (rP * (Theta - 1.0)) + (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * ders(1, 0) * 2.0) / (Theta - 1.0) - (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(Theta - 1.0, 3.0) * (Theta + 1.0) * 2.0) / rP - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0) * 2.0 + (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * (Theta + 1.0) * pow(-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0), 2.0)) / (rP * (Theta - 1.0)) - (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (Theta + 1.0) * 2.0) / (Theta - 1.0) + (sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * (Theta + 1.0) * ders(2, 0)) / (Theta - 1.0) + (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * (Theta + 1.0) * ((xi * 1.0 / pow(Theta - 1.0, 2.0) * 2.0) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 2.0) / (Theta - 1.0) - (xi * 1.0 / pow(Theta - 1.0, 3.0) * (Theta + 1.0) * 2.0) / rP - (xi * 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (Theta + 1.0) * 2.0) / (Theta - 1.0) + (xi * 1.0 / pow(rP, 2.0) * (Theta + 1.0) * ders(2, 0)) / (Theta - 1.0) - xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0) * 2.0)) / (rP * (Theta - 1.0)) - (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 2.0) / rP - (cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 2.0) / (Theta - 1.0);
  }
  else if (xi < endPushPart) { // Push-Part
    retVec(0) = 0.0;
    retVec(1) = 0.0;
  }
  else { // Primary
    retVec(0) = cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * 2.0 - cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 2.0) * ders(2, 0) - (cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * pow(-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)), 2.0)) / rP + (sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * 2.0) / (Theta + 1.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) + acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) - (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0)) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 2.0 + 1.0 / pow(rP, 2.0) * ders(2, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) + 1.0 / pow(rP, 2.0) * ders(1, 0) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0))) / rP - sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 2.0) * ders(1, 0) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0))) * 2.0;
    retVec(1) = sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * -2.0 + sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 2.0) * ders(2, 0) + (sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * pow(-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)), 2.0)) / rP + (cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * 2.0) / (Theta + 1.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) + acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) - (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0)) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 2.0 + 1.0 / pow(rP, 2.0) * ders(2, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) + 1.0 / pow(rP, 2.0) * ders(1, 0) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0))) / rP - cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 2.0) * ders(1, 0) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0))) * 2.0;
  }
}

void CVTReferenceSurfaceParts::computeVecAt30(Vec3 & retVec, double xi, double Theta) {
  double rP = primaryRadius.pointAt(Theta)(0);
  double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
  computeBeltNumbers(rP, Theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);

  if (xi < endSecondary) { // Secondary
    retVec(0) = sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * 1.0 / pow(Theta - 1.0, 2.0) * pow(Theta + 1.0, 2.0);
    retVec(1) = -cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * 1.0 / pow(Theta - 1.0, 2.0) * pow(Theta + 1.0, 2.0);
  }
  else if (xi < endPushPart) { // Push-Part
    retVec(0) = 0.0;
    retVec(1) = 0.0;
  }
  else { // Primary
    retVec(0) = -sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 2.0);
    retVec(1) = -cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 2.0);
  }
}

void CVTReferenceSurfaceParts::computeVecAt31(Vec3 & retVec, double xi, double Theta) {
  double rP = primaryRadius.pointAt(Theta)(0);
  double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
  computeBeltNumbers(rP, Theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);
  MatVx4 ders;
  primaryRadius.deriveAtH(Theta, 1, ders);

  if (xi < endSecondary) { // Secondary
    retVec(0) = sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * (Theta * 2.0 + 2.0) * 1.0 / pow(Theta - 1.0, 2.0) - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 2.0) * 2.0 - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * 1.0 / pow(Theta - 1.0, 2.0) * pow(Theta + 1.0, 2.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * pow(Theta + 1.0, 2.0) * 2.0;
    retVec(1) = -cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * (Theta * 2.0 + 2.0) * 1.0 / pow(Theta - 1.0, 2.0) + cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 2.0) * 2.0 + cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * pow(Theta + 1.0, 2.0) * 2.0 - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * 1.0 / pow(Theta - 1.0, 2.0) * pow(Theta + 1.0, 2.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0));
  }
  else if (xi < endPushPart) { // Push-Part
    retVec(0) = 0.0;
    retVec(1) = 0.0;
  }
  else { // Primary
    retVec(0) = cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 2.0) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0))) + sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 3.0) * ders(1, 0) * 2.0;
    retVec(1) = -sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 2.0) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0))) + cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 3.0) * ders(1, 0) * 2.0;
  }
}

void CVTReferenceSurfaceParts::computeVecAt32(Vec3 & retVec, double xi, double Theta) {
  double rP = primaryRadius.pointAt(Theta)(0);
  double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
  computeBeltNumbers(rP, Theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);
  MatVx4 ders;
  primaryRadius.deriveAtH(Theta, 2, ders);

  if (xi < endSecondary) { // Secondary
    retVec(0) = sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * 1.0 / pow(Theta - 1.0, 2.0) * 2.0 - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * (Theta * 2.0 + 2.0) * 1.0 / pow(Theta - 1.0, 3.0) * 4.0 + sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * 1.0 / pow(Theta - 1.0, 4.0) * pow(Theta + 1.0, 2.0) * 6.0 - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * (Theta * 2.0 + 2.0) * 1.0 / pow(Theta - 1.0, 2.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 2.0 + cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 2.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 4.0 - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * (Theta * 2.0 + 2.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * 4.0 + sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 2.0) * 8.0 - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * 1.0 / pow(Theta - 1.0, 2.0) * pow(Theta + 1.0, 2.0) * pow(-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0), 2.0) + sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 4.0) * pow(ders(1, 0), 2.0) * 1.0 / pow(Theta - 1.0, 2.0) * pow(Theta + 1.0, 2.0) * 6.0 - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 2.0) * pow(Theta + 1.0, 2.0) * ders(2, 0) * 2.0 - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * 1.0 / pow(Theta - 1.0, 2.0) * pow(Theta + 1.0, 2.0) * ((xi * 1.0 / pow(Theta - 1.0, 2.0) * 2.0) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 2.0) / (Theta - 1.0) - (xi * 1.0 / pow(Theta - 1.0, 3.0) * (Theta + 1.0) * 2.0) / rP - (xi * 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (Theta + 1.0) * 2.0) / (Theta - 1.0) + (xi * 1.0 / pow(rP, 2.0) * (Theta + 1.0) * ders(2, 0)) / (Theta - 1.0) - xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0) * 2.0) + cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * pow(Theta + 1.0, 2.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 4.0;
    retVec(1) = cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * 1.0 / pow(Theta - 1.0, 2.0) * -2.0 + cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * (Theta * 2.0 + 2.0) * 1.0 / pow(Theta - 1.0, 3.0) * 4.0 - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * 1.0 / pow(Theta - 1.0, 4.0) * pow(Theta + 1.0, 2.0) * 6.0 - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * 1.0 / pow(Theta - 1.0, 2.0) * pow(Theta + 1.0, 2.0) * ((xi * 1.0 / pow(Theta - 1.0, 2.0) * 2.0) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 2.0) / (Theta - 1.0) - (xi * 1.0 / pow(Theta - 1.0, 3.0) * (Theta + 1.0) * 2.0) / rP - (xi * 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (Theta + 1.0) * 2.0) / (Theta - 1.0) + (xi * 1.0 / pow(rP, 2.0) * (Theta + 1.0) * ders(2, 0)) / (Theta - 1.0) - xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0) * 2.0) + cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * (Theta * 2.0 + 2.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * 4.0 - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 2.0) * 8.0 - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * (Theta * 2.0 + 2.0) * 1.0 / pow(Theta - 1.0, 2.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 2.0 + sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 2.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 4.0 + cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 2.0) * 1.0 / pow(Theta - 1.0, 2.0) * pow(Theta + 1.0, 2.0) * pow(-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0), 2.0) - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 4.0) * pow(ders(1, 0), 2.0) * 1.0 / pow(Theta - 1.0, 2.0) * pow(Theta + 1.0, 2.0) * 6.0 + cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 2.0) * pow(Theta + 1.0, 2.0) * ders(2, 0) * 2.0 + sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * pow(Theta + 1.0, 2.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 4.0;
  }
  else if (xi < endPushPart) { // Push-Part
    retVec(0) = 0.0;
    retVec(1) = 0.0;
  }
  else { // Primary
    retVec(0) = sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 4.0) * pow(ders(1, 0), 2.0) * -6.0 + sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 3.0) * ders(2, 0) * 2.0 + sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 2.0) * pow(-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)), 2.0) + cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 2.0) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * 2.0) / (Theta + 1.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) + acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) - (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0)) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 2.0 + 1.0 / pow(rP, 2.0) * ders(2, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) + 1.0 / pow(rP, 2.0) * ders(1, 0) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) - cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 3.0) * ders(1, 0) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0))) * 4.0;
    retVec(1) = cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 4.0) * pow(ders(1, 0), 2.0) * -6.0 + cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 3.0) * ders(2, 0) * 2.0 + cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 2.0) * pow(-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)), 2.0) - sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 2.0) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * 2.0) / (Theta + 1.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) + acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) - (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0)) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 2.0 + 1.0 / pow(rP, 2.0) * ders(2, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) + 1.0 / pow(rP, 2.0) * ders(1, 0) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) + sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 3.0) * ders(1, 0) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0))) * 4.0;
  }
}

void CVTReferenceSurfaceParts::computeVecAt40(Vec3 & retVec, double xi, double Theta) {
  double rP = primaryRadius.pointAt(Theta)(0);
  double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
  computeBeltNumbers(rP, Theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);

  if (xi < endSecondary) { // Secondary
    retVec(0) = cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 3.0);
    retVec(1) = sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 3.0);
  }
  else if (xi < endPushPart) { // Push-Part
    retVec(0) = 0.0;
    retVec(1) = 0.0;
  }
  else { // Primary
    retVec(0) = -cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 3.0);
    retVec(1) = sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 3.0);
  }
}

void CVTReferenceSurfaceParts::computeVecAt41(Vec3 & retVec, double xi, double Theta) {
  double rP = primaryRadius.pointAt(Theta)(0);
  double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
  computeBeltNumbers(rP, Theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);
  MatVx4 ders;
  primaryRadius.deriveAtH(Theta, 1, ders);

  if (xi < endSecondary) { // Secondary
    retVec(0) = cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 2.0) * 3.0 - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 4.0) * pow(Theta + 1.0, 3.0) * 3.0 - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 4.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 3.0) * 3.0 + sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 3.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0));
    retVec(1) = sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 2.0) * 3.0 - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 4.0) * pow(Theta + 1.0, 3.0) * 3.0 - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 3.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 4.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 3.0) * 3.0;
  }
  else if (xi < endPushPart) { // Push-Part
    retVec(0) = 0.0;
    retVec(1) = 0.0;
  }
  else { // Primary
    retVec(0) = -sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 3.0) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0))) + cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 4.0) * ders(1, 0) * 3.0;
    retVec(1) = -cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 3.0) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0))) - sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 4.0) * ders(1, 0) * 3.0;
  }
}

void CVTReferenceSurfaceParts::computeVecAt42(Vec3 & retVec, double xi, double Theta) {
  double rP = primaryRadius.pointAt(Theta)(0);
  double rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart;
  computeBeltNumbers(rP, Theta, pulleyDistance, rS, phi, endSecondary, endPushPart, endPrimary, endLoosePart);
  MatVx4 ders;
  primaryRadius.deriveAtH(Theta, 2, ders);

  if (xi < endSecondary) { // Secondary
    retVec(0) = cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * (Theta * 2.0 + 2.0) * 1.0 / pow(Theta - 1.0, 3.0) * 3.0 - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 4.0) * pow(Theta + 1.0, 2.0) * 1.8E1 + cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 5.0) * pow(Theta + 1.0, 3.0) * 1.2E1 + sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 3.0) * ((xi * 1.0 / pow(Theta - 1.0, 2.0) * 2.0) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 2.0) / (Theta - 1.0) - (xi * 1.0 / pow(Theta - 1.0, 3.0) * (Theta + 1.0) * 2.0) / rP - (xi * 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (Theta + 1.0) * 2.0) / (Theta - 1.0) + (xi * 1.0 / pow(rP, 2.0) * (Theta + 1.0) * ders(2, 0)) / (Theta - 1.0) - xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0) * 2.0) - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 4.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 2.0) * 1.8E1 + cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 4.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 4.0) * pow(Theta + 1.0, 3.0) * 1.8E1 + sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 2.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 6.0 - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 4.0) * pow(Theta + 1.0, 3.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 6.0 - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 3.0) * pow(-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0), 2.0) + cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 5.0) * pow(ders(1, 0), 2.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 3.0) * 1.2E1 - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 4.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 3.0) * ders(2, 0) * 3.0 - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 4.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 3.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 6.0;
    retVec(1) = sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * (Theta * 2.0 + 2.0) * 1.0 / pow(Theta - 1.0, 3.0) * 3.0 - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 4.0) * pow(Theta + 1.0, 2.0) * 1.8E1 + sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 5.0) * pow(Theta + 1.0, 3.0) * 1.2E1 - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 2.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 6.0 + cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 4.0) * pow(Theta + 1.0, 3.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 6.0 - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 4.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 2.0) * 1.8E1 + sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 4.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 4.0) * pow(Theta + 1.0, 3.0) * 1.8E1 - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 3.0) * pow(-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0), 2.0) + sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 5.0) * pow(ders(1, 0), 2.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 3.0) * 1.2E1 - sin((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 4.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 3.0) * ders(2, 0) * 3.0 - cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 3.0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 3.0) * ((xi * 1.0 / pow(Theta - 1.0, 2.0) * 2.0) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 2.0) / (Theta - 1.0) - (xi * 1.0 / pow(Theta - 1.0, 3.0) * (Theta + 1.0) * 2.0) / rP - (xi * 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (Theta + 1.0) * 2.0) / (Theta - 1.0) + (xi * 1.0 / pow(rP, 2.0) * (Theta + 1.0) * ders(2, 0)) / (Theta - 1.0) - xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0) * 2.0) + cos((xi * (Theta + 1.0)) / (rP * (Theta - 1.0))) * 1.0 / pow(rP, 4.0) * ders(1, 0) * 1.0 / pow(Theta - 1.0, 3.0) * pow(Theta + 1.0, 3.0) * (-xi / (rP * (Theta - 1.0)) + (xi * 1.0 / pow(Theta - 1.0, 2.0) * (Theta + 1.0)) / rP + (xi * 1.0 / pow(rP, 2.0) * ders(1, 0) * (Theta + 1.0)) / (Theta - 1.0)) * 6.0;
  }
  else if (xi < endPushPart) { // Push-Part
    retVec(0) = 0.0;
    retVec(1) = 0.0;
  }
  else { // Primary
    retVec(0) = cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 5.0) * pow(ders(1, 0), 2.0) * -1.2E1 + cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 4.0) * ders(2, 0) * 3.0 + cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 3.0) * pow(-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)), 2.0) - sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 3.0) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * 2.0) / (Theta + 1.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) + acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) - (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0)) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 2.0 + 1.0 / pow(rP, 2.0) * ders(2, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) + 1.0 / pow(rP, 2.0) * ders(1, 0) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) + sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 4.0) * ders(1, 0) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0))) * 6.0;
    retVec(1) = sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 5.0) * pow(ders(1, 0), 2.0) * 1.2E1 - sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 4.0) * ders(2, 0) * 3.0 - sin(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 3.0) * pow(-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)), 2.0) - cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 3.0) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * 2.0) / (Theta + 1.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0) + acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * (Theta - 1.0) * ders(2, 0)) / (Theta + 1.0) - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) + (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / (pulleyDistance * (Theta + 1.0)) - (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ders(1, 0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0)) * 2.0) / (pulleyDistance * (Theta + 1.0)) - (1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * rP * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (Theta - 1.0) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) / (Theta + 1.0)) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * ((ders(1, 0) * 2.0) / (Theta + 1.0) - rP * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 - ders(1, 0) * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) * 2.0 + ders(2, 0) + rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 3.0) * 2.0 + ((Theta - 1.0) * ders(2, 0)) / (Theta + 1.0))) / pulleyDistance - 1.0 / pow(rP, 3.0) * pow(ders(1, 0), 2.0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) * 2.0 + 1.0 / pow(rP, 2.0) * ders(2, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) + 1.0 / pow(rP, 2.0) * ders(1, 0) * ((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) * 2.0 + 1.0 / (pulleyDistance * pulleyDistance * pulleyDistance) * 1.0 / pow(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0, 3.0 / 2.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * pow(rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0), 2.0)) + cos(acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) + (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0)) / rP) * 1.0 / pow(rP, 4.0) * ders(1, 0) * (-((acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP) / (Theta + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0) + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance - (rP * 1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (Theta - 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / (pulleyDistance * (Theta + 1.0))) / rP + (1.0 / sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) * (rP / (Theta + 1.0) + ders(1, 0) + (ders(1, 0) * (Theta - 1.0)) / (Theta + 1.0) - rP * (Theta - 1.0) * 1.0 / pow(Theta + 1.0, 2.0))) / pulleyDistance + 1.0 / pow(rP, 2.0) * ders(1, 0) * (xi - pulleyDistance * sqrt(-1.0 / (pulleyDistance * pulleyDistance) * pow(rP + (rP * (Theta - 1.0)) / (Theta + 1.0), 2.0) + 1.0) + (acos((rP + (rP * (Theta - 1.0)) / (Theta + 1.0)) / pulleyDistance) * rP * (Theta - 1.0)) / (Theta + 1.0))) * 6.0;
  }
}
