<?xml version="1.0" encoding="UTF-8" ?>
<DynamicSystemSolver name="TS" xmlns="http://mbsim.berlios.de/MBSim" xmlns:mbsimint="http://mbsim.berlios.de/MBSimIntegrator" xmlns:pv="http://openmbv.berlios.de/MBXMLUtils/physicalvariable" xmlns:ombv="http://openmbv.berlios.de/OpenMBV" xmlns:xi="http://www.w3.org/2001/XInclude">
    <position>[0,0,0]</position>
    <orientation>[[1,0,0],[0,1,0],[0,0,1]]</orientation>
    <frames />
    <contours />
    <groups />
    <objects>
        <RigidBody name="Box1">
            <frameOfReference ref="../Frame[I]" />
            <frameForKinematics ref="Frame[C]" />
            <mass>3</mass>
            <inertiaTensor>[[1,0,0],[0,1,0],[0,0,1]]</inertiaTensor>
            <timeDependentTranslation>
              <SymbolicFunction arg1="t"># Test the access to the (locally) casadi object
half=casadi.DMatrix.zeros(1, 1)
half[0]=2
ret=casadi.SX(3,1)
ret[0]=casadi.sin(freq1*t + pi/half)
ret[1]=v0y*t
ret[2]=0
              </SymbolicFunction>
            </timeDependentTranslation>
            <timeDependentRotation>
              <NestedFunction>
                <outerFunction>
                  <RotationAboutFixedAxis>
                    <axisOfRotation>[0,0,1]</axisOfRotation>
                  </RotationAboutFixedAxis>
                </outerFunction>
                <innerFunction>
                  <SymbolicFunction arg1="t">
                    5*casadi.sin(freq2*t)
                  </SymbolicFunction>
                </innerFunction>
              </NestedFunction>
            </timeDependentRotation>
            <frames />
            <contours />
            <openMBVRigidBody>
                <ombv:Cube name="Box1">
                    <ombv:initialTranslation>[0,0,0]</ombv:initialTranslation>
                    <ombv:initialRotation>[0,0,0]</ombv:initialRotation>
                    <ombv:scaleFactor>1</ombv:scaleFactor>
                    <ombv:length>2</ombv:length>
                </ombv:Cube>
            </openMBVRigidBody>
        </RigidBody>
        <RigidBody name="Box1a">
            <frameOfReference ref="../Frame[I]" />
            <frameForKinematics ref="Frame[C]" />
            <mass>3</mass>
            <inertiaTensor>[[1,0,0],[0,1,0],[0,0,1]]</inertiaTensor>
            <timeDependentTranslation>
              <SymbolicFunction arg1="t">
                ret=casadi.SX(3,1); ret[0]=casadi.sin(freq1*t + pi/2); ret[1]=v0y*t; ret[2]=0
              </SymbolicFunction>
            </timeDependentTranslation>
            <timeDependentRotation>
              <NestedFunction>
                <outerFunction>
                  <RotationAboutAxesXY/>
                </outerFunction>
                <innerFunction>
                  <SymbolicFunction arg1="t">
                    ret=casadi.SX(2,1);ret[0]=t;ret[1]=2*t
                  </SymbolicFunction>
                </innerFunction>
              </NestedFunction>
            </timeDependentRotation>
            <frames />
            <contours />
            <openMBVRigidBody>
                <ombv:Cube name="Box1a">
                    <ombv:initialTranslation>[0,0,0]</ombv:initialTranslation>
                    <ombv:initialRotation>[0,0,0]</ombv:initialRotation>
                    <ombv:scaleFactor>1</ombv:scaleFactor>
                    <ombv:length>2</ombv:length>
                </ombv:Cube>
            </openMBVRigidBody>
        </RigidBody>
        <RigidBody name="Box2">
            <frameOfReference ref="../Frame[I]" />
            <frameForKinematics ref="Frame[C]" />
            <mass>3</mass>
            <inertiaTensor>[[1,0,0],[0,1,0],[0,0,1]]</inertiaTensor>
            <stateDependentTranslation>
              <SymbolicFunction arg1="q" arg1Dim="1">
                ret=casadi.SX(3,1);ret[0]=5+casadi.cos(freq1*q); ret[1]=casadi.sin(freq1*q[0]); ret[2]=0
              </SymbolicFunction>
            </stateDependentTranslation>
            <frames />
            <contours />
            <openMBVRigidBody>
                <ombv:Cube name="Box2">
                    <ombv:initialTranslation>[0,0,0]</ombv:initialTranslation>
                    <ombv:initialRotation>[0,0,0]</ombv:initialRotation>
                    <ombv:scaleFactor>1</ombv:scaleFactor>
                    <ombv:length>1</ombv:length>
                </ombv:Cube>
            </openMBVRigidBody>
        </RigidBody>
        <RigidBody name="Box3">
            <initialGeneralizedVelocity>[0,1]</initialGeneralizedVelocity>
            <frameOfReference ref="../Frame[I]" />
            <frameForKinematics ref="Frame[C]" />
            <mass>3</mass>
            <inertiaTensor>[[1,0,0],[0,1,0],[0,0,1]]</inertiaTensor>
            <generalTranslation>
              <SymbolicFunction arg1="q" arg1Dim="2" arg2="t">
                <!-- SymbolicFunction does not distinguish between scalar, vector and matrix. Hence we can also write
                     <xmlMatrix>
                       <row><ele>x</ele></row>
                       <row><ele>x</ele></row>
                       <row><ele>x</ele></row>
                     </xmlMatrix>
                     here -->
                <pv:xmlVector>
                  <pv:ele>10+t+casadi.cos(freq1*q[0])</pv:ele>
                  <pv:ele>casadi.sin(freq1*q[0])</pv:ele>
                  <pv:ele>q[1]</pv:ele>
                </pv:xmlVector>
              </SymbolicFunction>
            </generalTranslation>
            <frames />
            <contours />
            <openMBVRigidBody>
                <ombv:Cube name="Box3">
                    <ombv:initialTranslation>[0,0,0]</ombv:initialTranslation>
                    <ombv:initialRotation>[0,0,0]</ombv:initialRotation>
                    <ombv:scaleFactor>1</ombv:scaleFactor>
                    <ombv:length>1</ombv:length>
                </ombv:Cube>
            </openMBVRigidBody>
        </RigidBody>
    </objects>
    <links />
    <environments>
        <MBSimEnvironment>
            <accelerationOfGravity>[0,-9.81,0]</accelerationOfGravity>
        </MBSimEnvironment>
    </environments>
</DynamicSystemSolver>
