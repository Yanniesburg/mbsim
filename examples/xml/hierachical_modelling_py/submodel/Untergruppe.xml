<?xml version="1.0" encoding="UTF-8"?>
<Group name="Untergruppe" xmlns="http://www.mbsim-env.de/MBSim"
    xmlns:pv="http://www.mbsim-env.de/MBXMLUtils"
    xmlns:ombv="http://www.mbsim-env.de/OpenMBV">
  <position>[(1/math.tan(2))/(1/math.tan(2)),0*555,0]</position><!-- use "cot" to test a octave internal .m file; use "det" to test a octave internal .oct file -->
  <orientation>
    <pv:cardan unit="degree">
      <pv:alpha>0</pv:alpha>
      <pv:beta>0</pv:beta>
      <pv:gamma>-alphaUG*180/pi</pv:gamma>
    </pv:cardan>
  </orientation>
  <frames/>
  <contours/>
  <groups/>
  <objects>
    <RigidBody name="Box1">
      <initialGeneralizedPosition>[l01 + h1/2 + 0.2]</initialGeneralizedPosition>
      <initialGeneralizedVelocity>[0]</initialGeneralizedVelocity>
      <frameOfReference ref="../Frame[I]"/>
      <frameForKinematics ref="Frame[C]"/>
      <mass>
        <![CDATA[# If more than one python statement is given, the value for the
          # element is taken from the python variable named 'ret'.
          # Note that the characters '<', '>' and '&' are not allowed in XML text
          # elements. You must quote them with '&lt;', '&gt;' and '&amp;' or use
          # a CDATA section as used here.
     # comments may be indented arbitarily as well as empty lines
       
          # This code for the element 'mass' is just the same as '<mass>m1</mass>'.
          # Take care of correct python indentation!
          def myfunc(a):
            return 2*a
          if 1 and 2:
            x=9
          else:
            x=8
          ret=myfunc(m1/2)

          # check registerPath
          mbxmlutils.registerPath('dummy.dat')
          mbxmlutils.load('dummy.dat')
          
          # just a dummy statement to check for "inline" imports
          import os.path
          os.path.basename('abc/cde.txt')
        ]]>
      </mass>
      <inertiaTensor>[[1,0,0] , [0,1,0] , [0,0,1]]</inertiaTensor>
      <stateDependentTranslation>
        <LinearTranslation>
          <translationVectors>
            [[0], [mymodule.myPyFunction(1)], [0]]
          </translationVectors>
        </LinearTranslation>
      </stateDependentTranslation>
      <frames>
        <FixedRelativeFrame name="P1">
          <enableOpenMBV>
            <size>h1</size>
            <offset>1</offset>
          </enableOpenMBV>
          <relativePosition>[0,-h1/2,0]</relativePosition>
          <relativeOrientation>mbxmlutils.rotateAboutX(0)</relativeOrientation>
        </FixedRelativeFrame>
        <pv:Embed>
          <include href="../frame.xml" xmlns="http://www.w3.org/2001/XInclude"/>
        </pv:Embed>
      </frames>
      <contours/>
      <openMBVRigidBody>
        <ombv:Cuboid name="dummy" outLine="m1==m2">
          <ombv:diffuseColor>[0,1,1]</ombv:diffuseColor>
          <ombv:transparency>0.2</ombv:transparency>
          <ombv:initialTranslation>[0,0,0]</ombv:initialTranslation>
          <ombv:initialRotation>[0,0,0]</ombv:initialRotation>
          <ombv:scaleFactor>1</ombv:scaleFactor>
          <ombv:length>[h1,h1,h1]</ombv:length>
        </ombv:Cuboid>
      </openMBVRigidBody>
    </RigidBody>
    <RigidBody name="Box2">
      <plotFeature feature="-stateDerivative"/>
      <initialGeneralizedPosition>[l01 + l02 + h1 + h2/2]</initialGeneralizedPosition>
      <initialGeneralizedVelocity>[0]</initialGeneralizedVelocity>
      <frameOfReference ref="../Frame[I]"/>
      <frameForKinematics ref="Frame[C]"/>
      <mass>m2</mass>
      <inertiaTensor>[[1,0,0] , [0,1,0] , [0,0,1]]</inertiaTensor>
      <stateDependentTranslation>
        <TranslationAlongYAxis/>
      </stateDependentTranslation>
      <frames>
        <FixedRelativeFrame name="P1">
          <enableOpenMBV>
            <size>h2</size>
            <offset>1</offset>
          </enableOpenMBV>
          <relativePosition>[0,-h2/2,0]</relativePosition>
          <relativeOrientation>
            <pv:cardan>
              <pv:alpha>0</pv:alpha>
              <pv:beta>a=9;ret=0</pv:beta>
              <pv:gamma>0</pv:gamma>
            </pv:cardan>
          </relativeOrientation>
        </FixedRelativeFrame>
      </frames>
      <contours/>
      <openMBVRigidBody>
        <IvBody name="dummy" xmlns="http://www.mbsim-env.de/OpenMBV">
          <diffuseColor>[0.3333,1,0.3333]</diffuseColor>
          <initialTranslation>[0,0,0]</initialTranslation>
          <initialRotation>[0,0,0]</initialRotation>
          <scaleFactor>1.5</scaleFactor>
          <ivFileName>'../'+ivdir+'/hat.iv'</ivFileName>
          <creaseEdges unit="degree">30</creaseEdges>
        </IvBody>
      </openMBVRigidBody>
    </RigidBody>
  </objects>
  <links>
    <SpringDamper name="Feder1">
      <forceFunction>
        <LinearSpringDamperForce>
          <stiffnessCoefficient>c1</stiffnessCoefficient>
          <dampingCoefficient>d1</dampingCoefficient>
          <unloadedLength>l01</unloadedLength>
        </LinearSpringDamperForce>
      </forceFunction>
      <connect ref1="../Object[Box1]/Frame[P1]" ref2="../Frame[I]"/>
      <enableOpenMBVForce>
        <scaleLength>0.005</scaleLength>
      </enableOpenMBVForce>
    </SpringDamper>
    <SpringDamper name="Feder2">
      <forceFunction>
        <LinearSpringDamperForce>
          <stiffnessCoefficient>c2</stiffnessCoefficient>
          <dampingCoefficient>d2</dampingCoefficient>
          <unloadedLength>l02</unloadedLength>
        </LinearSpringDamperForce>
      </forceFunction>
      <connect ref1="../Object[Box1]/Frame[P2]" ref2="../Object[Box2]/Frame[P1]"/>
      <enableOpenMBVCoilSpring>
          <numberOfCoils>5</numberOfCoils>
          <springRadius>0.1</springRadius>
          <crossSectionRadius>0.01</crossSectionRadius>
      </enableOpenMBVCoilSpring>
    </SpringDamper>
  </links>
</Group>
